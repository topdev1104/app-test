/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  MultiFeeDistribution,
  MultiFeeDistributionInterface,
} from '../contracts/MultiFeeDistribution';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stakingToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_rewardToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_rewardTokenVault',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'penaltyAmount',
        type: 'uint256',
      },
    ],
    name: 'ExitedEarly',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Locked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Minted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'rewardsToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'reward',
        type: 'uint256',
      },
    ],
    name: 'RewardPaid',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Withdrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'WithdrawnExpiredLocks',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rewardsToken',
        type: 'address',
      },
    ],
    name: 'addReward',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'claimableRewards',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultiFeeDistribution.RewardData[]',
        name: 'rewards',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
    ],
    name: 'delegateExit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'earnedBalances',
    outputs: [
      {
        internalType: 'uint256',
        name: 'total',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'unlockTime',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultiFeeDistribution.LockedBalance[]',
        name: 'earningsData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'exitDelegatee',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
    ],
    name: 'exitEarly',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_rewardTokens',
        type: 'address[]',
      },
    ],
    name: 'getReward',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'incentivesController',
    outputs: [
      {
        internalType: 'contract IChefIncentivesController',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rewardsToken',
        type: 'address',
      },
    ],
    name: 'lastTimeRewardApplicable',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
    ],
    name: 'lock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lockDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'lockedBalances',
    outputs: [
      {
        internalType: 'uint256',
        name: 'total',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'unlockable',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'locked',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'unlockTime',
            type: 'uint256',
          },
        ],
        internalType: 'struct MultiFeeDistribution.LockedBalance[]',
        name: 'lockData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lockedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'minters',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mintersAreSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rewardData',
    outputs: [
      {
        internalType: 'uint256',
        name: 'periodFinish',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rewardRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'lastUpdateTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rewardPerTokenStored',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardLookback',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardTokenVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'rewardTokens',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'rewards',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardsDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IChefIncentivesController',
        name: '_controller',
        type: 'address',
      },
    ],
    name: 'setIncentivesController',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_minters',
        type: 'address[]',
      },
    ],
    name: 'setMinters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stakingRewards',
        type: 'address',
      },
    ],
    name: 'setStakingRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    name: 'setTeamRewardFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'setTeamRewardVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingRewards',
    outputs: [
      {
        internalType: 'contract IStakingRewards',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingRewardsAreSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamRewardFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamRewardVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'userRewardPerTokenPaid',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vestingDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawExpiredLocks',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'withdrawableBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'penaltyAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amountWithoutPenalty',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60e06040526107d06007553480156200001757600080fd5b5060405162002c2438038062002c248339810160408190526200003a9162000125565b6200004533620000b8565b6001600160a01b0392831660805290821660a0819052911660c05260098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b031916821790556000908152600a60205260409020426002909101556200016f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200012057600080fd5b919050565b6000806000606084860312156200013b57600080fd5b620001468462000108565b9250620001566020850162000108565b9150620001666040850162000108565b90509250925092565b60805160a05160c051612a3f620001e5600039600081816103230152610c4d01526000818161066e01528181610b6101528181610c2b01528181610c89015281816119e901528181611aa801528181611f5b015261235f0152600081816104880152818161111d01526115710152612a3f6000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c80637bb7bed111610146578063af1df255116100c3578063e33b724211610087578063e33b7242146105e2578063e655dbd8146105f5578063e70b9e2714610608578063f2fde38b14610633578063f46eccc414610646578063f7c618c11461066957600080fd5b8063af1df25514610572578063ca5c7b9114610585578063d300b3321461058e578063dc01f60d146105a1578063df379876146105c157600080fd5b80638fd9f2ca1161010a5780638fd9f2ca1461052e578063904fdee01461053b5780639c9b2e211461054e578063a01c77bc14610561578063a1d61aa31461056957600080fd5b80637bb7bed1146104aa5780637fd7d062146104bd578063811d38d1146104d05780638bf39416146104f45780638da5cb5b1461051d57600080fd5b806340c10f19116101d457806366dfbfb41161019857806366dfbfb41461042a5780636fb83a571461043d5780637035ab9814610450578063715018a61461047b57806372f702f31461048357600080fd5b806340c10f191461037957806348e5d9f81461038c578063547d0096146103f1578063638634ee1461040457806364b87a701461041757600080fd5b80631514617e1161021b5780631514617e14610316578063296c0f721461031e578063386a95251461035d5780633b1837d9146103675780633ccfd60b1461037157600080fd5b806302b62938146102585780630408ae221461028b57806304554443146102ca5780630483a7f6146102e05780630ee2248f14610303575b600080fd5b61026b6102663660046125bf565b610690565b604080519384526020840192909252908201526060015b60405180910390f35b6102c86102993660046125bf565b336000908152600f6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b005b6102d26107c1565b604051908152602001610282565b6102f36102ee3660046125bf565b6107d2565b6040516102829493929190612622565b6102c8610311366004612651565b6109a0565b6102d26109f3565b6103457f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610282565b6102d262093a8081565b6102d26201518081565b6102c8610a01565b6102c861038736600461266a565b610bc3565b6103c961039a3660046125bf565b600a60205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a001610282565b6102c86103ff3660046126ac565b610e57565b6102d26104123660046125bf565b610f1f565b600854610345906001600160a01b031681565b6102c8610438366004612771565b610f4e565b6102c861044b3660046125bf565b611207565b6102d261045e3660046127a1565b600360209081526000928352604080842090915290825290205481565b6102c8611290565b6103457f000000000000000000000000000000000000000000000000000000000000000081565b6103456104b8366004612651565b6112a4565b6102c86104cb3660046126ac565b6112ce565b6008546104e490600160a01b900460ff1681565b6040519015158152602001610282565b6103456105023660046125bf565b600f602052600090815260409020546001600160a01b031681565b6000546001600160a01b0316610345565b6002546104e49060ff1681565b6102c86105493660046125bf565b6112e3565b6102c861055c3660046125bf565b611352565b6102c86113e4565b6102d260075481565b600554610345906001600160a01b031681565b6102d2600b5481565b600654610345906001600160a01b031681565b6105b46105af3660046125bf565b611649565b60405161028291906127cf565b6105d46105cf3660046125bf565b6117e9565b604051610282929190612827565b6102c86105f03660046125bf565b61194a565b6102c86106033660046125bf565b611b17565b6102d26106163660046127a1565b600460209081526000928352604080842090915290825290205481565b6102c86106413660046125bf565b611b41565b6104e46106543660046125bf565b60016020526000908152604090205460ff1681565b6103457f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0381166000908152600c6020526040812060018101548291829180156107ac576001600160a01b0386166000908152600e6020526040812054905b81811015610792576001600160a01b0388166000908152600e6020526040812080548390811061070457610704612840565b906000526020600020906002020160000154905080600014156107275750610780565b6001600160a01b0389166000908152600e6020526040902080544291908490811061075457610754612840565b90600052602060002090600202016001015411156107725750610792565b61077c8682611bb7565b9550505b8061078a8161286c565b9150506106d2565b506107a860026107a28487611bcc565b90611bd8565b9450505b6107b68185611bcc565b945050509193909250565b6107cf62093a806008612887565b81565b6001600160a01b0381166000908152600d602052604081208190819060609082805b825481101561097b574283828154811061081057610810612840565b9060005260206000209060020201600101541115610939578161089b57825461083a9082906128a6565b67ffffffffffffffff81111561085257610852612696565b60405190808252806020026020018201604052801561089757816020015b60408051808201909152600080825260208201528152602001906001900390816108705790505b5093505b8281815481106108ad576108ad612840565b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508483815181106108ec576108ec612840565b602002602001018190525081806109029061286c565b92505061093283828154811061091a5761091a612840565b60009182526020909120600290910201548690611bb7565b9450610969565b61096683828154811061094e5761094e612840565b60009182526020909120600290910201548790611bb7565b95505b806109738161286c565b9150506107f4565b5050506001600160a01b0385166000908152600c602052604090205493509193509193565b6109a8611be4565b6127108111156109ee5760405162461bcd60e51b815260206004820152600c60248201526b0cccaca40e8dede40d0d2ced60a31b60448201526064015b60405180910390fd5b600755565b6107cf62093a806004612887565b610a0a33611c3e565b336000908152600c60205260408120600181015490918115610b4e57336000908152600e6020526040812054905b81811015610b1f57336000908152600e60205260408120805483908110610a6157610a61612840565b90600052602060002090600202016000015490508060001415610a845750610b0d565b336000908152600e60205260409020805442919084908110610aa857610aa8612840565b9060005260206000209060020201600101541115610ac65750610b1f565b610ad08482611bb7565b336000908152600e6020526040902080549195509083908110610af557610af5612840565b60009182526020822060029091020181815560010155505b80610b178161286c565b915050610a38565b50336000908152600e6020526040902054610b4c57336000908152600e60205260408120610b4c9161255f565b505b8015610bbe57610b886001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611d3c565b60405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a25b505050565b3360009081526001602052604090205460ff16610c0c5760405162461bcd60e51b815260206004820152600760248201526610b6b4b73a32b960c91b60448201526064016109e5565b80610c15575050565b610c1e82611c3e565b610c736001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000003084611d9f565b6001600160a01b038216301415610cb257610cae7f000000000000000000000000000000000000000000000000000000000000000082611dd7565b5050565b6001600160a01b0382166000908152600c602052604090206001810154610cd99083611bb7565b60018201556000610d0e610cf162093a806004612887565b610d0862093a80610d024282611bd8565b90611e9a565b90611bb7565b6001600160a01b0385166000908152600e60205260409020805491925090801580610d6557508282610d416001846128a6565b81548110610d5157610d51612840565b906000526020600020906002020160010154105b15610da7576040805180820190915285815260208082018581528454600181810187556000878152939093209351600290910290930192835551910155610e0c565b610dde8583610db76001856128a6565b81548110610dc757610dc7612840565b600091825260209091206002909102015490611bb7565b82610dea6001846128a6565b81548110610dfa57610dfa612840565b60009182526020909120600290910201555b856001600160a01b03167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe86604051610e4791815260200190565b60405180910390a2505050505050565b610e5f611be4565b60025460ff1615610ea75760405162461bcd60e51b81526020600482015260126024820152711b5a5b9d195c88185b1c9958591e481cd95d60721b60448201526064016109e5565b60005b8151811015610f0e576001806000848481518110610eca57610eca612840565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580610f068161286c565b915050610eaa565b50506002805460ff19166001179055565b6001600160a01b0381166000908152600a6020526040812054428111610f455780610f47565b425b9392505050565b60008211610f8b5760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b60448201526064016109e5565b610f9481611c3e565b6001600160a01b0381166000908152600c60205260409020600b54610fb99084611bb7565b600b558054610fc89084611bb7565b81556000610fdd610cf162093a806008612887565b6001600160a01b0384166000908152600d602052604090205490915080158061104a57506001600160a01b0384166000908152600d6020526040902082906110266001846128a6565b8154811061103657611036612840565b906000526020600020906002020160010154105b156110a2576001600160a01b0384166000908152600d60209081526040808320815180830190925288825281830186815281546001818101845592865293909420915160029093029091019182559151910155611110565b6001600160a01b0384166000908152600d602052604090206110cb908690610db76001856128a6565b6001600160a01b0385166000908152600d602052604090206110ee6001846128a6565b815481106110fe576110fe612840565b60009182526020909120600290910201555b6111456001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333088611d9f565b836001600160a01b03167f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd600088660405161118091815260200190565b60405180910390a26008546001600160a01b0316156112005760085460405163282d3fdf60e01b81526001600160a01b038681166004830152602482018890529091169063282d3fdf90604401600060405180830381600087803b1580156111e757600080fd5b505af11580156111fb573d6000803e3d6000fd5b505050505b5050505050565b61120f611be4565b600854600160a01b900460ff16156112695760405162461bcd60e51b815260206004820152601a60248201527f7374616b696e675265776172647320616c72656164792073657400000000000060448201526064016109e5565b600880546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b611298611be4565b6112a26000611ea6565b565b600981815481106112b457600080fd5b6000918252602090912001546001600160a01b0316905081565b6112d733611c3e565b6112e081611ef6565b50565b6112eb611be4565b6001600160a01b0381166113305760405162461bcd60e51b815260206004820152600c60248201526b61646472657373207a65726f60a01b60448201526064016109e5565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61135a611be4565b6001600160a01b0381166000908152600a60205260409020600201541561138057600080fd5b60098054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b039092166001600160a01b0319909216821790556000908152600a6020526040902042600282018190559055565b6113ed33611c3e565b336000908152600d60209081526040808320600c909252822081549192909142846114196001846128a6565b8154811061142957611429612840565b90600052602060002090600202016001015411611463578254336000908152600d6020526040812091935061145e919061255f565b611509565b60005b81811015611507574285828154811061148157611481612840565b906000526020600020906002020160010154111561149e57611507565b6114cb8582815481106114b3576114b3612840565b60009182526020909120600290910201548490611bb7565b92508481815481106114df576114df612840565b60009182526020822060029091020181815560010155806114ff8161286c565b915050611466565b505b600082116115465760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b60448201526064016109e5565b82546115529083611bcc565b8355600b546115619083611bcc565b600b556115986001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384611d3c565b60405182815233907f401321eacd32d0779a1de4ef7e54230af5e1a657bb38a39afb7f3916aecc357a9060200160405180910390a26008546001600160a01b0316156116435760085460405163f3fef3a360e01b8152336004820152602481018490526001600160a01b039091169063f3fef3a390604401600060405180830381600087803b15801561162a57600080fd5b505af115801561163e573d6000803e3d6000fd5b505050505b50505050565b60095460609067ffffffffffffffff81111561166757611667612696565b6040519080825280602002602001820160405280156116ac57816020015b60408051808201909152600080825260208201528152602001906001900390816116855790505b50905060005b81518110156117e357600981815481106116ce576116ce612840565b9060005260206000200160009054906101000a90046001600160a01b03168282815181106116fe576116fe612840565b6020026020010151600001906001600160a01b031690816001600160a01b0316815250506117b164e8d4a510006107a28585858151811061174157611741612840565b602002602001015160000151600c6000896001600160a01b03166001600160a01b03168152602001908152602001600020600001546117ac6009888154811061178c5761178c612840565b600091825260209091200154600b546001600160a01b0390911690612165565b6121fa565b8282815181106117c3576117c3612840565b6020908102919091018101510152806117db8161286c565b9150506116b2565b50919050565b6001600160a01b0381166000908152600e6020526040812060609082805b8254811015611942574283828154811061182357611823612840565b906000526020600020906002020160010154111561193057816118ae57825461184d9082906128a6565b67ffffffffffffffff81111561186557611865612696565b6040519080825280602002602001820160405280156118aa57816020015b60408051808201909152600080825260208201528152602001906001900390816118835790505b5093505b8281815481106118c0576118c0612840565b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508483815181106118ff576118ff612840565b602002602001018190525081806119159061286c565b92505061192d83828154811061091a5761091a612840565b94505b8061193a8161286c565b915050611807565b505050915091565b6001600160a01b03811633148061197a57506001600160a01b038181166000908152600f60205260409020541633145b61198357600080fd5b61198c81611c3e565b60008061199883610690565b506001600160a01b0385166000908152600e602052604081209294509092506119c1919061255f565b6001600160a01b038084166000908152600c60205260408120600181019190915590611a10907f0000000000000000000000000000000000000000000000000000000000000000168585611d3c565b8115611acd576005546001600160a01b0316638e2eba09306000604051908082528060200260200182016040528015611a53578160200160208202803683370190505b506040518363ffffffff1660e01b8152600401611a719291906128bd565b600060405180830381600087803b158015611a8b57600080fd5b505af1158015611a9f573d6000803e3d6000fd5b50505050611acd7f000000000000000000000000000000000000000000000000000000000000000083611dd7565b60408051848152602081018490526001600160a01b038616917fb9d085d37935f9d1625432939418832c1862e03b445447a6c4bcbb4e40de2d55910160405180910390a250505050565b611b1f611be4565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b611b49611be4565b6001600160a01b038116611bae5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109e5565b6112e081611ea6565b6000611bc38284612919565b90505b92915050565b6000611bc382846128a6565b6000611bc38284612931565b6000546001600160a01b031633146112a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e5565b60095460005b81811015610bbe57600060098281548110611c6157611c61612840565b60009182526020808320909101546001600160a01b0316808352600a90915260408220600b549193509190611c97908490612165565b600383018190559050611ca983610f1f565b60028301556001600160a01b0386163014611d26576001600160a01b0386166000908152600c6020526040902054611ce59087908590846121fa565b6001600160a01b0380881660008181526004602090815260408083209489168084529482528083209590955591815260038252838120928152919052208190555b5050508080611d349061286c565b915050611c44565b6040516001600160a01b038316602482015260448101829052610bbe90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612269565b6040516001600160a01b03808516602483015283166044820152606481018290526116439085906323b872dd60e01b90608401611d68565b6000611de3838361233b565b6001600160a01b0384166000908152600a602052604090208054919250904210611e2757611e1d62093a806107a28464e8d4a51000611e9a565b6001820155611e7e565b8054600090611e369042611bcc565b90506000611e5a64e8d4a510006107a2856001015485611e9a90919063ffffffff16565b9050611e7662093a806107a264e8d4a51000610d028886611bb7565b600184015550505b4260028201819055611e939062093a80611bb7565b9055505050565b6000611bc38284612887565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805160005b81811015610bbe576000838281518110611f1757611f17612840565b6020908102919091018101513360009081526004835260408082206001600160a01b038416835290935291822054909250611f579064e8d4a51000611bd8565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316146120d3576001600160a01b0382166000908152600a60205260409020805480611ff05760405162461bcd60e51b81526020600482015260146024820152732ab735b737bbb7103932bbb0b932103a37b5b2b760611b60448201526064016109e5565b600482015461200f6120086201518062093a806128a6565b4290611bb7565b8210156120bd576040516370a0823160e01b815230600482015260009061209c9083906001600160a01b038916906370a082319060240160206040518083038186803b15801561205e57600080fd5b505afa158015612072573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120969190612953565b90611bcc565b905080156120bb576120ae8682611dd7565b6120b88282611bb7565b91505b505b6120c78185611bcc565b83600401819055505050505b806120df575050612153565b3360008181526004602090815260408083206001600160a01b03871680855292528220919091556121109183611d3c565b6040518181526001600160a01b0383169033907f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e9060200160405180910390a350505b8061215d8161286c565b915050611efb565b60008161218e57506001600160a01b0382166000908152600a6020526040902060030154611bc6565b6001600160a01b0383166000908152600a602052604090206001810154600290910154611bc3916121d89185916107a291670de0b6b3a764000091610d029182906120968c610f1f565b6001600160a01b0385166000908152600a602052604090206003015490611bb7565b6001600160a01b0380851660008181526004602090815260408083209488168084529482528083205493835260038252808320948352939052918220546122609190610d0890670de0b6b3a7640000906107a290612259908890611bcc565b8890611e9a565b95945050505050565b60006122be826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123de9092919063ffffffff16565b805190915015610bbe57808060200190518101906122dc919061296c565b610bbe5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109e5565b6000808211801561235657506006546001600160a01b031615155b801561239457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b156117e3576007546000906123af90610d0285612710611bd8565b90506123bb8382611bcc565b6006549092506123d8906001600160a01b03868116911683611d3c565b50611bc6565b60606123ed84846000856123f5565b949350505050565b6060824710156124565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109e5565b6001600160a01b0385163b6124ad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109e5565b600080866001600160a01b031685876040516124c991906129ba565b60006040518083038185875af1925050503d8060008114612506576040519150601f19603f3d011682016040523d82523d6000602084013e61250b565b606091505b509150915061251b828286612526565b979650505050505050565b60608315612535575081610f47565b8251156125455782518084602001fd5b8160405162461bcd60e51b81526004016109e591906129d6565b50805460008255600202906000526020600020908101906112e091905b80821115612596576000808255600182015560020161257c565b5090565b6001600160a01b03811681146112e057600080fd5b80356125ba8161259a565b919050565b6000602082840312156125d157600080fd5b8135610f478161259a565b600081518084526020808501945080840160005b838110156126175781518051885283015183880152604090960195908201906001016125f0565b509495945050505050565b84815283602082015282604082015260806060820152600061264760808301846125dc565b9695505050505050565b60006020828403121561266357600080fd5b5035919050565b6000806040838503121561267d57600080fd5b82356126888161259a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156126bf57600080fd5b823567ffffffffffffffff808211156126d757600080fd5b818501915085601f8301126126eb57600080fd5b8135818111156126fd576126fd612696565b8060051b604051601f19603f8301168101818110858211171561272257612722612696565b60405291825284820192508381018501918883111561274057600080fd5b938501935b8285101561276557612756856125af565b84529385019392850192612745565b98975050505050505050565b6000806040838503121561278457600080fd5b8235915060208301356127968161259a565b809150509250929050565b600080604083850312156127b457600080fd5b82356127bf8161259a565b915060208301356127968161259a565b602080825282518282018190526000919060409081850190868401855b8281101561281a57815180516001600160a01b031685528601518685015292840192908501906001016127ec565b5091979650505050505050565b8281526040602082015260006123ed60408301846125dc565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561288057612880612856565b5060010190565b60008160001904831182151516156128a1576128a1612856565b500290565b6000828210156128b8576128b8612856565b500390565b6001600160a01b038381168252604060208084018290528451918401829052600092858201929091906060860190855b8181101561290b5785518516835294830194918301916001016128ed565b509098975050505050505050565b6000821982111561292c5761292c612856565b500190565b60008261294e57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561296557600080fd5b5051919050565b60006020828403121561297e57600080fd5b81518015158114610f4757600080fd5b60005b838110156129a9578181015183820152602001612991565b838111156116435750506000910152565b600082516129cc81846020870161298e565b9190910192915050565b60208152600082518060208401526129f581604085016020870161298e565b601f01601f1916919091016040019291505056fea2646970667358221220ead35373d42eaff7b63748aaf12843128d4c945aff1cae0710cc81eb332fd7a664736f6c63430008090033';

type MultiFeeDistributionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiFeeDistributionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiFeeDistribution__factory extends ContractFactory {
  constructor(...args: MultiFeeDistributionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _rewardTokenVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiFeeDistribution> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      _rewardTokenVault,
      overrides || {}
    ) as Promise<MultiFeeDistribution>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    _rewardTokenVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      _rewardTokenVault,
      overrides || {}
    );
  }
  override attach(address: string): MultiFeeDistribution {
    return super.attach(address) as MultiFeeDistribution;
  }
  override connect(signer: Signer): MultiFeeDistribution__factory {
    return super.connect(signer) as MultiFeeDistribution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiFeeDistributionInterface {
    return new utils.Interface(_abi) as MultiFeeDistributionInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MultiFeeDistribution {
    return new Contract(address, _abi, signerOrProvider) as MultiFeeDistribution;
  }
}
