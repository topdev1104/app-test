/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type { GeistToken, GeistTokenInterface } from './GeistToken';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxTotalSupply',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxTotalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minter',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_minter',
        type: 'address',
      },
    ],
    name: 'setMinter',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405234801561001057600080fd5b506040516109383803806109388339818101604052602081101561003357600080fd5b5051608081905260408051600080825291513392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef919081900360200190a3506080516108a56100936000398061047b528061050d52506108a56000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b411461027d578063a9059cbb14610285578063dd62ed3e146102b1578063fca3b5aa146102df576100cf565b8063313ce5671461020d57806340c10f191461022b57806370a0823114610257576100cf565b806306fdde03146100d45780630754617214610151578063095ea7b31461017557806318160ddd146101b557806323b872dd146101cf5780632ab4d05214610205575b600080fd5b6100dc610305565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61015961033e565b604080516001600160a01b039092168252519081900360200190f35b6101a16004803603604081101561018b57600080fd5b506001600160a01b03813516906020013561034d565b604080519115158252519081900360200190f35b6101bd6103b3565b60408051918252519081900360200190f35b6101a1600480360360608110156101e557600080fd5b506001600160a01b038135811691602081013590911690604001356103b9565b6101bd610479565b61021561049d565b6040805160ff9092168252519081900360200190f35b6101a16004803603604081101561024157600080fd5b506001600160a01b0381351690602001356104a2565b6101bd6004803603602081101561026d57600080fd5b50356001600160a01b0316610581565b6100dc610593565b6101a16004803603604081101561029b57600080fd5b506001600160a01b0381351690602001356105b4565b6101bd600480360360408110156102c757600080fd5b506001600160a01b03813581169160200135166105ca565b6101a1600480360360208110156102f557600080fd5b50356001600160a01b03166105e7565b6040518060400160405280601c81526020017f47656973742e46696e616e63652050726f746f636f6c20546f6b656e0000000081525081565b6001546001600160a01b031681565b3360008181526003602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60005481565b6001600160a01b03831660009081526003602090815260408083203384529091528120548281101561042b576040805162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015290519081900360640190fd5b60001981146104635761043e8184610623565b6001600160a01b03861660009081526003602090815260408083203384529091529020555b61046e85858561066c565b506001949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b601281565b6001546000906001600160a01b031633146104bc57600080fd5b6001600160a01b0383166000908152600260205260409020546104df908361077e565b6001600160a01b03841660009081526002602052604081209190915554610506908361077e565b60008190557f0000000000000000000000000000000000000000000000000000000000000000101561053757600080fd5b6040805183815290516001600160a01b038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b60026020526000908152604090205481565b6040518060400160405280600581526020016411d15254d560da1b81525081565b60006105c133848461066c565b50600192915050565b600360209081526000928352604080842090915290825290205481565b6001546000906001600160a01b03161561060057600080fd5b50600180546001600160a01b0383166001600160a01b0319909116178155919050565b600061066583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506107d8565b9392505050565b6001600160a01b0383166000908152600260205260409020548111156106d0576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6001600160a01b0383166000908152600260205260409020546106f39082610623565b6001600160a01b038085166000908152600260205260408082209390935590841681522054610722908261077e565b6001600160a01b0380841660008181526002602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082820183811015610665576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081848411156108675760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561082c578181015183820152602001610814565b50505050905090810190601f1680156108595780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fea2646970667358221220fd955fc426cb2243bc618327f7e1db41f41294a686c04605853c0f4460c848e364736f6c63430007060033';

type GeistTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GeistTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GeistToken__factory extends ContractFactory {
  constructor(...args: GeistTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxTotalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GeistToken> {
    return super.deploy(_maxTotalSupply, overrides || {}) as Promise<GeistToken>;
  }
  override getDeployTransaction(
    _maxTotalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maxTotalSupply, overrides || {});
  }
  override attach(address: string): GeistToken {
    return super.attach(address) as GeistToken;
  }
  override connect(signer: Signer): GeistToken__factory {
    return super.connect(signer) as GeistToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeistTokenInterface {
    return new utils.Interface(_abi) as GeistTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GeistToken {
    return new Contract(address, _abi, signerOrProvider) as GeistToken;
  }
}
