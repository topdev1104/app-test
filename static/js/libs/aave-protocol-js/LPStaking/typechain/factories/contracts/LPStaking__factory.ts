/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type { LPStaking, LPStakingInterface } from '../../contracts/LPStaking';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract StargateToken',
        name: '_stargate',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_stargatePerBlock',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_startBlock',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_bonusEndBlock',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'pid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'pid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'EmergencyWithdraw',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'pid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [],
    name: 'BONUS_MULTIPLIER',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_allocPoint',
        type: 'uint256',
      },
      {
        internalType: 'contract IERC20',
        name: '_lpToken',
        type: 'address',
      },
    ],
    name: 'add',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bonusEndBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pid',
        type: 'uint256',
      },
    ],
    name: 'emergencyWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_from',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_to',
        type: 'uint256',
      },
    ],
    name: 'getMultiplier',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'lpBalances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'massUpdatePools',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pid',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_user',
        type: 'address',
      },
    ],
    name: 'pendingStargate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'poolInfo',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'lpToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'allocPoint',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'lastRewardBlock',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accStargatePerShare',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_allocPoint',
        type: 'uint256',
      },
    ],
    name: 'set',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_stargatePerBlock',
        type: 'uint256',
      },
    ],
    name: 'setStargatePerBlock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stargate',
    outputs: [
      {
        internalType: 'contract StargateToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stargatePerBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'startBlock',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAllocPoint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pid',
        type: 'uint256',
      },
    ],
    name: 'updatePool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'userInfo',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'rewardDebt',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_pid',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405260006008553480156200001657600080fd5b50604051620026dd380380620026dd833981810160405260808110156200003c57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505060006200007d620002b960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3504382101562000176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180620026ae602f913960400191505060405180910390fd5b81811015620001d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806200267a6034913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141562000259576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180620026596021913960400191505060405180910390fd5b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600381905550816009819055508060028190555050505050620002c1565b600033905090565b61238880620002d16000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806351eb05a6116100c35780638da5cb5b1161007c5780638da5cb5b146104895780638dbb1e3a146104bd57806393f1a40b1461050957806398c03a7214610572578063e2bbb15814610590578063f2fde38b146105c85761014d565b806351eb05a6146103c75780635312ea8e146103f5578063630b5ba1146104235780636c099dee1461042d578063715018a6146104615780638aa285501461046b5761014d565b80631aed6553116101155780631aed6553146102755780632b8bbbe8146102935780632f607fdd146102e15780633497070614610343578063441a3e701461037157806348cd4cb1146103a95761014d565b80630328e32f14610152578063081e3eda146101945780631526fe27146101b257806317caf6f11461021f5780631ab06ee51461023d575b600080fd5b61017e6004803603602081101561016857600080fd5b810190808035906020019092919050505061060c565b6040518082815260200191505060405180910390f35b61019c610624565b6040518082815260200191505060405180910390f35b6101de600480360360208110156101c857600080fd5b8101908080359060200190929190505050610631565b604051808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b610227610691565b6040518082815260200191505060405180910390f35b6102736004803603604081101561025357600080fd5b810190808035906020019092919080359060200190929190505050610697565b005b61027d6107c0565b6040518082815260200191505060405180910390f35b6102df600480360360408110156102a957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c6565b005b61032d600480360360408110156102f757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b22565b6040518082815260200191505060405180910390f35b61036f6004803603602081101561035957600080fd5b8101908080359060200190929190505050610d68565b005b6103a76004803603604081101561038757600080fd5b810190808035906020019092919080359060200190929190505050610e29565b005b6103b16110b0565b6040518082815260200191505060405180910390f35b6103f3600480360360208110156103dd57600080fd5b81019080803590602001909291905050506110b6565b005b6104216004803603602081101561040b57600080fd5b8101908080359060200190929190505050611277565b005b61042b6113e8565b005b610435611415565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61046961143b565b005b6104736114ec565b6040518082815260200191505060405180910390f35b6104916114f1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104f3600480360360408110156104d357600080fd5b81019080803590602001909291908035906020019092919050505061151a565b6040518082815260200191505060405180910390f35b6105556004803603604081101561051f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115cc565b604051808381526020018281526020019250505060405180910390f35b61057a6115fd565b6040518082815260200191505060405180910390f35b6105c6600480360360408110156105a657600080fd5b810190808035906020019092919080359060200190929190505050611603565b005b61060a600480360360208110156105de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611820565b005b60056020528060005260406000206000915090505481565b6000600680549050905090565b6006818154811061064157600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60085481565b61069f611a12565b73ffffffffffffffffffffffffffffffffffffffff166106bd6114f1565b73ffffffffffffffffffffffffffffffffffffffff1614610746576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61074e6113e8565b610793816107856006858154811061076257fe5b906000526020600020906004020160010154600854611a1a90919063ffffffff16565b611a9d90919063ffffffff16565b60088190555080600683815481106107a757fe5b9060005260206000209060040201600101819055505050565b60025481565b6107ce611a12565b73ffffffffffffffffffffffffffffffffffffffff166107ec6114f1565b73ffffffffffffffffffffffffffffffffffffffff1614610875576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61087d6113e8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610920576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f53746172476174653a206c70546f6b656e2063616e742062652030783000000081525060200191505060405180910390fd5b60001515600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146109c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061229b6021913960400191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006009544311610a3457600954610a36565b435b9050610a4d83600854611a9d90919063ffffffff16565b600881905550600660405180608001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b60008060068481548110610b3257fe5b9060005260206000209060040201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c2c57600080fd5b505afa158015610c40573d6000803e3d6000fd5b505050506040513d6020811015610c5657600080fd5b81019080805190602001909291905050509050836002015443118015610c7d575060008114155b15610d18576000610c9285600201544361151a565b90506000610cd5600854610cc78860010154610cb960035487611b2590919063ffffffff16565b611b2590919063ffffffff16565b611bab90919063ffffffff16565b9050610d13610d0484610cf664e8d4a5100085611b2590919063ffffffff16565b611bab90919063ffffffff16565b85611a9d90919063ffffffff16565b935050505b610d5c8360010154610d4e64e8d4a51000610d40868860000154611b2590919063ffffffff16565b611bab90919063ffffffff16565b611a1a90919063ffffffff16565b94505050505092915050565b610d70611a12565b73ffffffffffffffffffffffffffffffffffffffff16610d8e6114f1565b73ffffffffffffffffffffffffffffffffffffffff1614610e17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e1f6113e8565b8060038190555050565b600060068381548110610e3857fe5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015610f16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f77697468647261773a205f616d6f756e7420697320746f6f206c61726765000081525060200191505060405180910390fd5b610f1f846110b6565b6000610f698260010154610f5b64e8d4a51000610f4d87600301548760000154611b2590919063ffffffff16565b611bab90919063ffffffff16565b611a1a90919063ffffffff16565b9050610f753382611c34565b610f8c848360000154611a1a90919063ffffffff16565b8260000181905550610fc664e8d4a51000610fb885600301548560000154611b2590919063ffffffff16565b611bab90919063ffffffff16565b826001018190555061101d33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611da99092919063ffffffff16565b611043846005600088815260200190815260200160002054611a1a90919063ffffffff16565b6005600087815260200190815260200160002081905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040518082815260200191505060405180910390a35050505050565b60095481565b6000600682815481106110c557fe5b90600052602060002090600402019050806002015443116110e65750611274565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561117357600080fd5b505afa158015611187573d6000803e3d6000fd5b505050506040513d602081101561119d57600080fd5b8101908080519060200190929190505050905060008114156111c9574382600201819055505050611274565b60006111d983600201544361151a565b9050600061121c60085461120e866001015461120060035487611b2590919063ffffffff16565b611b2590919063ffffffff16565b611bab90919063ffffffff16565b905061125e61124b8461123d64e8d4a5100085611b2590919063ffffffff16565b611bab90919063ffffffff16565b8560030154611a9d90919063ffffffff16565b8460030181905550438460020181905550505050505b50565b60006006828154811061128657fe5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061135633828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611da99092919063ffffffff16565b61137c816005600087815260200190815260200160002054611a1a90919063ffffffff16565b6005600086815260200190815260200160002081905550833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b6000600680549050905060005b8181101561141157611406816110b6565b8060010190506113f5565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611443611a12565b73ffffffffffffffffffffffffffffffffffffffff166114616114f1565b73ffffffffffffffffffffffffffffffffffffffff16146114ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b565b600181565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060025482116115525761154b600161153d8585611a1a90919063ffffffff16565b611b2590919063ffffffff16565b90506115c6565b60025483106115755761156e8383611a1a90919063ffffffff16565b90506115c6565b6115c361158d60025484611a1a90919063ffffffff16565b6115b560016115a787600254611a1a90919063ffffffff16565b611b2590919063ffffffff16565b611a9d90919063ffffffff16565b90505b92915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b60035481565b60006006838154811061161257fe5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061167f846110b6565b6000816000015411156116e45760006116d682600101546116c864e8d4a510006116ba87600301548760000154611b2590919063ffffffff16565b611bab90919063ffffffff16565b611a1a90919063ffffffff16565b90506116e23382611c34565b505b6117353330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e4b909392919063ffffffff16565b61174c838260000154611a9d90919063ffffffff16565b816000018190555061178664e8d4a5100061177884600301548460000154611b2590919063ffffffff16565b611bab90919063ffffffff16565b81600101819055506117b4836005600087815260200190815260200160002054611a9d90919063ffffffff16565b6005600086815260200190815260200160002081905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15856040518082815260200191505060405180910390a350505050565b611828611a12565b73ffffffffffffffffffffffffffffffffffffffff166118466114f1565b73ffffffffffffffffffffffffffffffffffffffff16146118cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611955576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806122bc6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600082821115611a92576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015611b1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611b385760009050611ba5565b6000828402905082848281611b4957fe5b0414611ba0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123086021913960400191505060405180910390fd5b809150505b92915050565b6000808211611c22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b818381611c2b57fe5b04905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611cbf57600080fd5b505afa158015611cd3573d6000803e3d6000fd5b505050506040513d6020811015611ce957600080fd5b8101908080519060200190929190505050905080821115611d5657611d518382600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611da99092919063ffffffff16565b611da4565b611da38383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611da99092919063ffffffff16565b5b505050565b611e468363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f0c565b505050565b611f06846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f0c565b50505050565b6000611f6e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611ffb9092919063ffffffff16565b9050600081511115611ff657808060200190516020811015611f8f57600080fd5b8101908080519060200190929190505050611ff5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612329602a913960400191505060405180910390fd5b5b505050565b606061200a8484600085612013565b90509392505050565b60608247101561206e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806122e26026913960400191505060405180910390fd5b612077856121bb565b6120e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106121385780518252602082019150602081019050602083039250612115565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461219a576040519150601f19603f3d011682016040523d82523d6000602084013e61219f565b606091505b50915091506121af8282866121ce565b92505050949350505050565b600080823b905060008111915050919050565b606083156121de57829050612293565b6000835111156121f15782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561225857808201518184015260208101905061223d565b50505050905090810190601f1680156122855780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe53746172476174653a205f6c70546f6b656e20616c7265616479206578697374734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220cd4e62c8108ebf362ba22e221906f53f8897e0635d41c79d90b0c37ad312dafa64736f6c6343000706003353746172676174653a205f73746172676174652063616e6e6f74206265203078304c505374616b696e673a205f626f6e7573456e64426c6f636b206d757374206265203e207468616e205f7374617274426c6f636b4c505374616b696e673a205f7374617274426c6f636b206d757374206265203e3d2063757272656e7420626c6f636b';

type LPStakingConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPStaking__factory extends ContractFactory {
  constructor(...args: LPStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stargate: PromiseOrValue<string>,
    _stargatePerBlock: PromiseOrValue<BigNumberish>,
    _startBlock: PromiseOrValue<BigNumberish>,
    _bonusEndBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPStaking> {
    return super.deploy(
      _stargate,
      _stargatePerBlock,
      _startBlock,
      _bonusEndBlock,
      overrides || {}
    ) as Promise<LPStaking>;
  }
  override getDeployTransaction(
    _stargate: PromiseOrValue<string>,
    _stargatePerBlock: PromiseOrValue<BigNumberish>,
    _startBlock: PromiseOrValue<BigNumberish>,
    _bonusEndBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stargate,
      _stargatePerBlock,
      _startBlock,
      _bonusEndBlock,
      overrides || {}
    );
  }
  override attach(address: string): LPStaking {
    return super.attach(address) as LPStaking;
  }
  override connect(signer: Signer): LPStaking__factory {
    return super.connect(signer) as LPStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPStakingInterface {
    return new utils.Interface(_abi) as LPStakingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LPStaking {
    return new Contract(address, _abi, signerOrProvider) as LPStaking;
  }
}
